LRMat[i] = as.vector(unlist(temp[[i]]))
}
LRMat
LRVec = rep(0,nboot)
for (i in 1:nboot)
{
LRVec[i] = as.vector(unlist(temp[[i]]))
}
obsp <- length(lrVec[lrVec>obsTest])/nboot
obsp <- length(LRVec[LRVec>obsTest])/nboot
obsp
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
mixFit <- LPfit(TN2016,90,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 2
minRank = 90
ParallelTest(nboot,TN2016,obsTest,minRank)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
mixFit <- LPfit(TN2016,90,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 2
minRank = 90
ParallelTest(nboot,TN2016,obsTest,minRank)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
mixFit <- LPfit(TN2016,90,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 2
minRank = 90
ParallelTest(nboot,TN2016,obsTest,minRank)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
resFit <- LPfit(TN2016,n-minRank,nbootMLE)
resFit$alpha
resFit$bootEst
resFit$bootStd
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
resFit <- LPfit(TN2016,n-minRank,nbootMLE)
resFit$alpha
minRank = 90
mixFit <- LPfit(TN2016,minRank,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
obsTest
nboot = 2
ParallelTest(nboot,TN2016,obsTest,minRank)
nboot
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
minRank = 90
mixFit <- LPfit(TN2016,minRank,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 2
ParallelTest(nboot,TN2016,obsTest,minRank)
nboot
?ParallelTest
?LPfit
mixFit$bootStd
source("~/.active-rstudio-document")
minRank <- 90
mixFit <- LPfit(TN2016,minRank,0)
muNull <- mean(log(TN2016))
sigmaNull <- sd(log(TN2016))
n <- length(TN2016)
LPtest <- function(y,minRank)
{
n <- length(y)
th <- y[minRank:(n-1)]
est0 <- c(mean(log(y)),sd(log(y)))
ell0 <- sum(log(dlnorm(y,est0[1],est0[2])))
xmin0 <- quantile(y,.45)
p0 <- .75
alpha0 <- 3
mu0 <- mean(log(y))+1
sigma0 <- sd(log(y))
th <- ysim[minRank:(n-1)]
nthresh <- length(th)
resMat <- matrix(0,nthresh,5)
for (k in 1:nthresh)
{
a <- th[k]
Res <- par_logn_mix_known(y, p0, a, alpha0, mu0, sigma0)
resMat[k,] <- c(Res$prior,Res$alpha,Res$mu,Res$sigma,Res$loglik)
temp <- Res$post[,1]
post1 <- temp[temp<1]
}
indice <- which.max(resMat[,5]) # rank (starting form the smallest observations) of xminhat (corresponding to the largest likelihood)
xminhat <- th[indice]
temp1 <- par_logn_mix_known(y, p0, xminhat, alpha0, mu0, sigma0)
ell1 <- temp1$loglik
LR <- pmax(0,2*(ell1-ell0)) # sometimes slightly negative, as ell1 is computed numerically
results <- list(res=LR)
results
}
LPtest(TN2016,130)
LPtest <- function(y,minRank)
{
n <- length(y)
th <- y[minRank:(n-1)]
est0 <- c(mean(log(y)),sd(log(y)))
ell0 <- sum(log(dlnorm(y,est0[1],est0[2])))
xmin0 <- quantile(y,.45)
p0 <- .75
alpha0 <- 3
mu0 <- mean(log(y))+1
sigma0 <- sd(log(y))
th <- y[minRank:(n-1)]
nthresh <- length(th)
resMat <- matrix(0,nthresh,5)
for (k in 1:nthresh)
{
a <- th[k]
Res <- par_logn_mix_known(y, p0, a, alpha0, mu0, sigma0)
resMat[k,] <- c(Res$prior,Res$alpha,Res$mu,Res$sigma,Res$loglik)
temp <- Res$post[,1]
post1 <- temp[temp<1]
}
indice <- which.max(resMat[,5]) # rank (starting form the smallest observations) of xminhat (corresponding to the largest likelihood)
xminhat <- th[indice]
temp1 <- par_logn_mix_known(y, p0, xminhat, alpha0, mu0, sigma0)
ell1 <- temp1$loglik
LR <- pmax(0,2*(ell1-ell0)) # sometimes slightly negative, as ell1 is computed numerically
results <- list(res=LR)
results
}
LPtest(TN2016,130)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
resFit <- LPfit(TN2016,n-minRank,nbootMLE)
# resTest <- LPtest(100,0,1,0.67,100,90)
install_github("marco-bee/LNPar") # devtools
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
resFit <- LPfit(TN2016,n-minRank,nbootMLE)
minRank = 90
mixFit <- LPfit(TN2016,minRank,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 2
ParallelTest(nboot,TN2016,obsTest,minRank)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
minRank = 90
mixFit <- LPfit(TN2016,minRank,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 2
ParallelTest(nboot,TN2016,obsTest,minRank)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
minRank = 90
mixFit <- LPfit(TN2016,minRank,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
obsTest
nboot = 2
ParallelTest(nboot,TN2016,obsTest,minRank)
?ParallelTest
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
?dLnormParMix
dlnorm(0)
?dpareto
?LPfit
?LPtest
?ParallelTest
ParallelTest
n.cores <- parallel::detectCores()
clust <- parallel::makeCluster(n.cores)
clust
?ParallelTest
?MLEBoot
?rLnormParMix
?system.time
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
minRank = 90
mixFit <- LPfit(TN2016,minRank,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 2
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
nboot = 20
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
resFit <- LPfit(TN2016,n-minRank,nbootMLE)
minRank = 90
mixFit <- LPfit(TN2016,minRank,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 20
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
?lapply
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
minRank = 90
mixFit <- LPfit(TN2016,minRank,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 20
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
parallel::detectCores()
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 10
minRank = 90
mixFit <- LPfit(TN2016,minRank,2)
ell1 <- mixFit$loglik
estNull <- c(mean(log(TN2016)),sd(log(TN2016)))
ellNull <- sum(log(dlnorm(TN2016,estNull[1],estNull[2])))
obsTest <- 2*(ell1-ellNull)
nboot = 20
system.time(ParallelTest(nboot,TN2016,obsTest,minRank))
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
?LNPar
?LPfit
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
setwd("./LNPar") # LNPar must be an existing directory
devtools::check()
use_mit_license()
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
setwd("./LNPar") # LNPar must be an existing directory
devtools::check()
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
source("~/.active-rstudio-document")
setwd("./LNPar") # LNPar must be an existing directory
devtools::check()
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
setwd("./LNPar") # LNPar must be an existing directory
devtools::check()
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
setwd("./LNPar") # LNPar must be an existing directory
devtools::check()
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
setwd("./LNPar") # LNPar must be an existing directory
devtools::check()
20*38
