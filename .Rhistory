write(dati[,1],file=paste('C:\\Users\\marco.bee\\Dropbox\\fGARCH with non stationary component\\Data(Cross)\\SP500_',beginDate,'_',endDate,'.txt',sep=''),ncolumns=1)
rm(list=ls())
library(tseries)
beginDate <- '2011-09-01'
endDate <- '2021-09-01'
priceSP <- get.hist.quote(instrument = "^GSPC", start = beginDate, end = endDate, quote="Close", retclass = 'ts')
priceSP <- data.frame(priceSP)
priceDAX <- get.hist.quote(instrument = "^GDAXI", start = '2011-09-01', end = '2021-09-01', quote="Close", retclass = 'ts')
priceDAX <- data.frame(priceDAX)
matrice <- cbind(priceSP,priceDAX)
dati <- matrice[complete.cases(matrice),]
write(dati[,1],file=paste('C:\\Users\\marco.bee\\Dropbox\\fGARCH with non stationary component\\Data(Cross)\\SP500_',beginDate,'_',endDate,'.txt',sep=''),ncolumns=1)
write(dati[,2],file=paste('C:\\Users\\marco.bee\\Dropbox\\fGARCH with non stationary component\\Data(Cross)\\DAX_',beginDate,'_',endDate,'.txt',sep=''),ncolumns=1)
rm(list=ls())
library(tseries)
beginDate <- '2011-09-01'
endDate <- '2021-09-01'
priceSP <- get.hist.quote(instrument = "^GSPC", start = beginDate, end = endDate, quote="Close", retclass = 'ts')
priceSP
priceSP <- get.hist.quote(instrument = "^GSPC", start = beginDate, end = endDate, quote="Close", retclass = 'zoo')
priceSP
tail(priceSP,100)
rm(list=ls())
library(fpp3)
z <- tibble('Month' = c('2019 Jan','2019 Feb','2019 Mar','2019 Apr','2019 May'),'Observation' = c(50,23,34,30,25))
z1 <- mutate(z, Month = yearmonth(Month))
z1ts <- as_tsibble(z1, index = Month)
z1ts
library(fpp3)
?autoplot
autoplot.tbl_ts
autoplot.tbl_ts
autoplot.tbl_ts()
library(fabletools)
autoplot.tbl_ts
autoplot
getAnywhere(autoplot)
source("~/.active-rstudio-document")
install.packages(c("backports", "broom", "cli", "crayon", "deSolve", "generics", "ISLR2", "laeken", "lubridate", "misc3d", "mvtnorm", "pillar", "randtoolbox", "rbibutils", "RcppArmadillo", "rlang", "rngWELL", "rootSolve", "rvest", "stringi", "tibble", "tsibble", "tzdb", "uuid", "VineCopula", "xfun"))
dnbinom(0:18,16,.5)
sum(dnbinom(0:18,16,.5))
sum(dnbinom(0:19,16,.5))
1-dnbinom(0,16,.5))
1-dnbinom(0,16,.5)
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y==0
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1)/n)
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<=19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1==0)/length(n1))
print(1-length(y1==0)/length(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<=19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<=19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<=19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<=19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
1-dnbinom(0,16,.5)
1-dnbinom(0,16,.5)
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/n)
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
print(mean(y1))
print(1-length(y1[y1==0])/n)
print(1-length(y1[y1==0])/length(y1))
indici
source("~/.active-rstudio-document")
y1
hist(y1)
y1[y1=18]
y1=18
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
y1==18
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 1000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 100000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 100000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 100000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 100000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 100000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 10000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 10000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 10000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 10000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 10000000
y <- rnbinom(n,16,.5)
indici <- y<19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 10000000
y <- rnbinom(n,16,.5)
indici <- y<=19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
rm(list=ls())
n <- 10000000
y <- rnbinom(n,16,.5)
indici <- y<=19
# y[indici] = 19
y1 <- y[indici]
# print(mean(y1))
print(1-length(y1[y1==0])/length(y1))
source("~/.active-rstudio-document")
mean(apply(apply(matrix(rgeom(16*1e6,.5)+1,nc=16),1,cumsum)>18,2,sum))
rgeom(16*1e6,.5)+1
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
22/500
12/500
27/500
15/500
26/500
8/500
7/500
6/500
21/500
13/500
1/500
18/500
3/500
11/500
29/500
14/500
15/500
16/500
1/500
12/500
29/500
26/500
21/500
28/500
11/500
31/500
24/500
4/500
18/500
17/500
2/500
19/500
3/500
15/500
rm(list=ls())
library(tseries)
beginDate <- as.Date('09/01/05',"%m/%d/%y") #
endDate <- as.Date('09/01/21',"%m/%d/%y")
nome1 <- 'DAX'
nome2 <- 'SP500'
price1 <- get.hist.quote(instrument = "FTSEMIB.MI", start = beginDate, end = endDate, quote="Close", retclass = 'ts')  # ^GDAXI, ^FCHI, ^FTSE, ^AXJO
price1 <- data.frame(price1)
# price1 <- price1[1:(length(price1$Close)-1),] # only needed for ASX200
price2 <- get.hist.quote(instrument = "^GSPC", start = beginDate, end = endDate, quote="Close", retclass = 'ts')
price2 <- data.frame(price2)
matrice <- cbind(price1,price2)
dati <- matrice[complete.cases(matrice),]
write(dati[,1],file=paste('C:\\Users\\marco.bee\\Dropbox\\fGARCH with non stationary component\\Data(Cross)\\',nome1,'_',beginDate,'_',endDate,'.txt',sep=''),ncolumns=1)
write(dati[,2],file=paste('C:\\Users\\marco.bee\\Dropbox\\fGARCH with non stationary component\\Data(Cross)\\',nome1,'_',nome2,'_',beginDate,'_',endDate,'.txt',sep=''),ncolumns=1)
rm(list=ls())
library(tseries)
beginDate <- as.Date('09/01/05',"%m/%d/%y") #
endDate <- as.Date('09/01/21',"%m/%d/%y")
nome1 <- 'FTSEMIB'
nome2 <- 'SP500'
price1 <- get.hist.quote(instrument = "FTSEMIB.MI", start = beginDate, end = endDate, quote="Close", retclass = 'ts')  # ^GDAXI, ^FCHI, ^FTSE, ^AXJO
price1 <- data.frame(price1)
# price1 <- price1[1:(length(price1$Close)-1),] # only needed for ASX200
price2 <- get.hist.quote(instrument = "^GSPC", start = beginDate, end = endDate, quote="Close", retclass = 'ts')
price2 <- data.frame(price2)
matrice <- cbind(price1,price2)
dati <- matrice[complete.cases(matrice),]
write(dati[,1],file=paste('C:\\Users\\marco.bee\\Dropbox\\fGARCH with non stationary component\\Data(Cross)\\',nome1,'_',beginDate,'_',endDate,'.txt',sep=''),ncolumns=1)
write(dati[,2],file=paste('C:\\Users\\marco.bee\\Dropbox\\fGARCH with non stationary component\\Data(Cross)\\',nome1,'_',nome2,'_',beginDate,'_',endDate,'.txt',sep=''),ncolumns=1)
30/500
12/500
25/500
13/500
16/500
4/500
25/500
7/500
18/500
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\Dropbox\\LognPareto")
setwd("./LNPar")
document()
setwd('..')
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,90)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,90)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,90)
LPtest(100,0,1,0.67,100,90)
LPtest(500,0,1,0.67,100,490)
LPtest(100,0,1,0.67,100,490)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,490)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,490)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,490)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,90)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,90)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,90)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,90)
install('LNPar')
library('LNPar')
LPtest(100,0,1,0.67,100,90)
y <- read.delim('impreseTN2016.csv',header=F,sep=',')
install('LNPar')
library('LNPar')
y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
y <- y[,3]
y <- y[y>0]
LPfit(100,0,1,0.67,100,90)
source("C:/Users/marco.bee/Dropbox/LognPareto/LNPar/comandi.R")
LPfit(100,0,1,0.67,100,90)
LPfit
setwd('..')
install('LNPar')
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\Dropbox\\LognPareto")
setwd("./LNPar")
document()
setwd('..')
install('LNPar')
library('LNPar')
y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
y <- y[,3]
y <- y[y>0]
LPfit(y,150,3)
document()
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\Dropbox\\LognPareto")
setwd("./LNPar")
document()
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
source("C:/Users/marco.bee/Dropbox/LognPareto/LNPar/comandi.R")
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\Dropbox\\LognPareto")
setwd("./LNPar")
document()
setwd('..')
install('LNPar')
library('LNPar')
# y <- read.delim('C:\\Users\\marco.bee\\Dropbox\\LognPareto\\WebCodes\\impreseTN2016.csv',header=F,sep=',')
# y <- y[,3]
# TN2016 <- y[y>0]
# use_data(TN2016)
n <- length(TN2016)
minRank <- 33
nbootMLE <- 2
?TN2016
library(LNPar)
install('LNPar')
library(devtools)
library(roxygen2)
install('LNPar')
setwd('..')
install('LNPar')
library('LNPar')
?TN2016
install.packages("githubinstall")
library(githubinstall)
gh_install_packages(LNPar)
githubinstall(LNPar)
githubinstall(LognPar)
gh_install_packages(LognPar)
library(githubinstall)
gh_install_packages(LNPar)
githubinstall(LnPar)
githubinstall(LNPar)
install_github("marco-bee/LNPar")
library(devtools)
install_github("marco-bee/LNPar")
install_github("marco-bee/LNPar")
install_github("marco-bee/LNPar")
install_github("marco-bee/LNPar")
library(devtools)
install_github("marco-bee/LNPar")
install_github("marco-bee/LNPar")
install_github("marco-bee/LNPar")
