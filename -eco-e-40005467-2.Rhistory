res <- LNPPower(1,n,pt[1],xmint,alphat,q100)
rm(list=ls())
library(LNPar)
n <- 100
pt <- c(.99,97,.95,.9,.85,.8,.7)
xmint <- 5
alphat <- 2
q100 <- c(9.846317, 11.877622, 17.549547)
q500 <- c(9.677661, 11.580822, 16.338070)
LNPPower <- function(x,n,p,xmin,alpha,q100)
{
index = Sys.getenv("PBS_ARRAY_INDEX")
library(LNPar)
y = rLnormParMix(n,p,0,1,xmin,alpha)
mixFit <- LPfitEM(y,1e-12,1000)
ell1 <- mixFit$loglik
estNull <- c(mean(log(y)),sd(log(y)))
ellNull <- sum(log(dlnorm(y)))
obsTest <- 2*(ell1-ellNull)
r <- findInterval(obsTest,q100)
res <- list(rank=r,LR=obsTest)
# write.table(t(c(r,obsTest)),paste("./results/powLevelLR_",n,"_",p,"_",alphat,"_",xmin,"_0_1_",index,".txt",sep=""),row.names=FALSE,col.names=FALSE)
#  write.table(LR,paste("./results/powLR_",n,"_",pt,"_",alphat,"_",xmin,"_",nreps,"_0_1_",index,".txt",sep=""),row.names=FALSE,col.names=FALSE)
return(res)
}
res <- LNPPower(1,n,pt[1],xmint,alphat,q100)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
getwd
getwd()
mytib <- tibble(p9=pow9,p95=pow95,p99=pow99)
library(tidyverse)
install.packages("tidyverse")
mytib <- tibble(p9=pow9,p95=pow95,p99=pow99)
library(tidyverse)
mytib <- tibble(p9=pow9,p95=pow95,p99=pow99)
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
mytib <- tibble(lev=pi,p9=pow9,p95=pow95,p99=pow99)
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
p
mytib
pow9
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
p
rev(pi)
pi
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
p
p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9))
p
p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9)) +
geom_line(aes(y=p95)) + geom_line(aes(y=p99))
p
p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = p9)) +
geom_line(aes(y=p95)) + geom_line(aes(y=p99))
p
p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = 'p9')) +
geom_line(aes(y=p95)) + geom_line(aes(y=p99))
p
p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = 'p9')) +
geom_line(aes(y=p95,color = 'p95')) + geom_line(aes(y=p99,color = 'p99'))
print(p)
p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=9,color = 'p9')) +
geom_line(aes(y=p95,color = 'p95')) + geom_line(aes(y=p99,color = 'p99'))
print(p)
p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = '90%')) +
geom_line(aes(y=p95,color = 'p95')) + geom_line(aes(y=p99,color = 'p99'))
print(p)
p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = '90%')) +
geom_line(aes(y=p95,color = '95%')) + geom_line(aes(y=p99,color = '99%'))
print(p)
p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = '99%')) +
geom_line(aes(y=p95,color = '95%')) + geom_line(aes(y=p99,color = '90%'))
print(p)
# p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = '99%')) +
# geom_line(aes(y=p95,color = '95%')) + geom_line(aes(y=p99,color = '90%'))
mytibLong = pivot_longer(mytib,c(lev,p9,p95,p99),
names_to = 'Level', values_to = 'Power')
mytibLong$Function <- factor(mytibLong$Function,
levels = unique(mytibLong$Function))
# p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = '99%')) +
# geom_line(aes(y=p95,color = '95%')) + geom_line(aes(y=p99,color = '90%'))
mytibLong = pivot_longer(mytib,c(lev,p9,p95,p99),
names_to = 'Level', values_to = 'Power')
mytibLong$Level <- factor(mytibLong$Level,
levels = unique(mytibLong$Level))
p <- ggplot(mytibLong, aes(x = x, y = Values, color = Level)) +
geom_line()
print(p)
p <- ggplot(mytibLong, aes(x = lev, y = Values, color = Level)) +
geom_line()
print(p)
mytib <- tibble(lev=rev(pi),p9=powMat[,1],p95=powMat[,2],p99=powMat[,3])
# p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = '99%')) +
# geom_line(aes(y=p95,color = '95%')) + geom_line(aes(y=p99,color = '90%'))
mytibLong = pivot_longer(mytib,c(lev,p9,p95,p99),
names_to = 'Level', values_to = 'Power')
mytibLong$Level <- factor(mytibLong$Level,
levels = unique(mytibLong$Level))
p <- ggplot(mytibLong, aes(x = x, y = Values, color = Level)) +
geom_line()
print(p)
p <- ggplot(mytibLong, aes(x = rev(pi), y = Values, color = Level)) +
geom_line()
print(p)
p <- ggplot(mytibLong, aes(x = rev(pi), y = levels, color = Level)) +
geom_line()
print(p)
p <- ggplot(mytibLong, aes(x = rev(pi), y = Power, color = Level)) +
geom_line()
print(p)
mytib <- tibble(lev=rev(pi),p9=powMat[,1],p95=powMat[,2],p99=powMat[,3])
# p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = '99%')) +
# geom_line(aes(y=p95,color = '95%')) + geom_line(aes(y=p99,color = '90%'))
mytibLong = pivot_longer(mytib,c(lev,p9,p95,p99),
names_to = 'Level', values_to = 'Power')
mytibLong$Level <- factor(mytibLong$Level,
levels = unique(mytibLong$Level))
p <- ggplot(mytibLong, aes(x = rev(pi), y = Power, color = Level)) +
geom_line()
print(p)
mytibLong
# p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = '99%')) +
# geom_line(aes(y=p95,color = '95%')) + geom_line(aes(y=p99,color = '90%'))
mytibLong = pivot_longer(mytib,c(p9,p95,p99),
names_to = 'Level', values_to = 'Power')
mytibLong$Level <- factor(mytibLong$Level,
levels = unique(mytibLong$Level))
p <- ggplot(mytibLong, aes(x = rev(pi), y = Power, color = Level)) +
geom_line()
print(p)
mytibLong
# p <- ggplot(mytib, aes(x=lev)) + geom_line(aes(y=p9,color = '99%')) +
# geom_line(aes(y=p95,color = '95%')) + geom_line(aes(y=p99,color = '90%'))
mytibLong = pivot_longer(mytib,c(p9,p95,p99),
names_to = 'Level', values_to = 'Power')
mytibLong$Level <- factor(mytibLong$Level,
levels = unique(mytibLong$Level))
mytibLong
p <- ggplot(mytibLong, aes(x = rev(pi), y = Power, color = Level)) +
geom_line()
print(p)
rlang::last_trace()
rev(pi)
source("~/.active-rstudio-document")
p1
ntibLong
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
mytibLong
library(tibble)
library(ggplot2)
x = seq(1,10,length.out=100)
y = log(x)
x0 = 2
y1 = log(x0) + (1/x0) * (x-x0)
y2 = log(x0) + (1/x0) * (x-x0) - (1/x0^2) * (x-x0)^2/2
y3 = log(x0) + (1/x0) * (x-x0) - (1/x0^2) * (x-x0)^2/2 + (2/x0^3)*(x-x0)^3/6
Tib <- tibble(x=x,Log=y,First=y1,Second=y2,Third=y3)
ntibLong = pivot_longer(Tib,c(Log,First,Second,Third),
names_to = 'Function', values_to = 'Values')
ntibLong$Function <- factor(ntibLong$Function, levels = unique(ntibLong$Function))
p1 <- ggplot(ntibLong, aes(x = x, y = Values, color = Function)) +
geom_line()
ntibLong
mytibLong
print(mytibLong,n=40)
x
p1
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
p <- ggplot(mytibLong, aes(x = 1:21, y = Power, color = Level)) +
geom_line()
print(p)
library(tibble)
library(ggplot2)
x = seq(1,10,length.out=100)
y = log(x)
x0 = 2
y1 = log(x0) + (1/x0) * (x-x0)
y2 = log(x0) + (1/x0) * (x-x0) - (1/x0^2) * (x-x0)^2/2
y3 = log(x0) + (1/x0) * (x-x0) - (1/x0^2) * (x-x0)^2/2 + (2/x0^3)*(x-x0)^3/6
Tib <- tibble(x=x,Log=y,First=y1,Second=y2,Third=y3)
ntibLong = pivot_longer(Tib,c(Log,First,Second,Third),
names_to = 'Function', values_to = 'Values')
ntibLong$Function <- factor(ntibLong$Function, levels = unique(ntibLong$Function))
p1 <- ggplot(ntibLong, aes(x = x, y = Values, color = Function)) +
geom_line()
p <- ggplot(mytibLong, aes(x = 1:7, y = Power, color = Level)) +
geom_line()
print(p)
library(tibble)
library(ggplot2)
x = seq(1,10,length.out=100)
y = log(x)
x0 = 2
y1 = log(x0) + (1/x0) * (x-x0)
y2 = log(x0) + (1/x0) * (x-x0) - (1/x0^2) * (x-x0)^2/2
y3 = log(x0) + (1/x0) * (x-x0) - (1/x0^2) * (x-x0)^2/2 + (2/x0^3)*(x-x0)^3/6
Tib <- tibble(x=x,Log=y,First=y1,Second=y2,Third=y3)
ntibLong = pivot_longer(Tib,c(Log,First,Second,Third),
names_to = 'Function', values_to = 'Values')
ntibLong$Function <- factor(ntibLong$Function, levels = unique(ntibLong$Function))
p1 <- ggplot(ntibLong, aes(x = x, y = Values, color = Function)) +
geom_line()
p <- ggplot(mytibLong, aes(x = rep(pi,3), y = Power, color = Level)) +
geom_line()
print(p)
p <- ggplot(mytibLong, aes(x = pi, y = Power, color = Level)) +
geom_line()
print(p)
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
pivec
library(tibble)
library(ggplot2)
x = seq(1,10,length.out=100)
y = log(x)
x0 = 2
y1 = log(x0) + (1/x0) * (x-x0)
y2 = log(x0) + (1/x0) * (x-x0) - (1/x0^2) * (x-x0)^2/2
y3 = log(x0) + (1/x0) * (x-x0) - (1/x0^2) * (x-x0)^2/2 + (2/x0^3)*(x-x0)^3/6
Tib <- tibble(x=x,Log=y,First=y1,Second=y2,Third=y3)
ntibLong = pivot_longer(Tib,c(Log,First,Second,Third),
names_to = 'Function', values_to = 'Values')
ntibLong$Function <- factor(ntibLong$Function, levels = unique(ntibLong$Function))
p1 <- ggplot(ntibLong, aes(x = x, y = Values, color = Function)) +
geom_line()
mytibLong
ntibLong
rep(pivec,3)
?rep
rep(pivec,each=3)
p1 <- ggplot(ntibLong, aes(x = rep(pivec,each=3), y = Values, color = Function)) +
geom_line()
p1
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
LR <- matrix(scan(paste("c:\\users\\marco.bee\\onedrive\\LognPareto\\ECME\\results\\matrici\\LR_",
n,"_",pivec[i],"_",alphapar,"_0_1_",xmin,".txt",sep="")),byrow=TRUE,ncol = 1)
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/resultsPowerHPC.R")
source("C:/Users/marco.bee/OneDrive/LognPareto/ECME/codes/GraficiPotenza.R")
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(LNPar)
library(CASdatasets)
install.packages("CASdatasets", repos = "https://freakonometrics.github.io/CASdatasets/pub/R/", type="source")
install.packages("CASdatasets", repos = "http://dutangc.perso.math.cnrs.fr/RRepository/pub/", type="source")
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(LNPar)
library(CASdatasets)
# BL <- 10 # 20
# dati <- as.matrix(read.csv(paste("g:\\il mio drive\\oldstuff\\paperi\\indinfgh\\operational losses unicredit\\data",BL,".csv",sep="")),header=FALSE) # 60 ok, 50 no, 10 no
# datitutti <- as.double(dati[,1])
# y <- datitutti/1000 # all years, one business line
data("auscathist")
y <- auscathist$NormCost2014
NMA = y[is.na(y)==FALSE]
y = NMA[NMA>0]
n <- length(y)
hist(y)
eps = 1e-12
maxiter = 1000
takeOut = 5
nboot = 1000
est0 <- c(mean(log(y)),sd(log(y)))
resultsEM <- LPfitEM(y,eps,maxiter)
estParsEM <- resultsEM$pars
x = seq(0,max(y),length.out=30000)
dmix <- dLnormParMix(x,estParsEM[1],estParsEM[3],estParsEM[4],estParsEM[5],estParsEM[2])
dlogn <- dlnorm(x,est0[1],est0[2])
mytib1 <- tibble(y = y)
mytib2 <- tibble(x=x,dlogn=dlogn,dmix=dmix)
xmin <- estParsEM[5]
p1 <- ggplot(mytib1, aes(x = y)) +
geom_histogram(aes(y=after_stat(density)),breaks=seq(0,floor(max(y)+1),
length.out=40), color="black", fill="white") +
geom_line(data=subset(mytib2, x<=xmin), aes(x = x, y = dmix, color = 'Mix')) +
geom_line(data=subset(mytib2, x>xmin), aes(x = x, y = dmix, color = 'Mix')) +
stat_function(fun = dlnorm, aes(color = "Logn"), args = list(mean = mean(log(mytib1$y)), sd = sd(log(mytib1$y)))) +
guides(colour = guide_legend(title = NULL)) + xlab("Losses (millions of 2014 AUD)") +
theme(legend.position="inside",legend.position.inside = c(.9,.9))
print(p1)
ell0Obs <- sum(log(dlnorm(y,est0[1],est0[2])))
ell1Obs <- resultsEM$loglik
obsTest <- pmax(0,2*(ell1Obs-ell0Obs))
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
mixFit <- LPfitProf(TN2016,90,0)
mixFit <- LPfitProf(TN2016,90,2)
mixFit
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
ysim <- sort(rLnormParMix(100,.9,0,1,5,1))
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
ysim <- sort(rLnormParMix(100,.9,0,1,5,1))
mixFit <- LPfitEM(ysim,1e-10,1000)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
ysim <- sort(rLnormParMix(100,.9,0,1,5,1))
mixFit <- LPfitEM(ysim,1e-10,1000)
mixFit
mixFit <- LPfitEM(ysim,1e-10,1000,nboot=2)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
mixFit <- LPfitEM(ysim,1e-10,1000,nboot=2)
ysim <- sort(rLnormParMix(100,.9,0,1,5,1))
mixFit <- LPfitEM(ysim,1e-10,1000,nboot=2)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
ysim <- sort(rLnormParMix(100,.9,0,1,5,1))
mixFit <- LPfitEM(ysim,1e-10,1000,nboot=2)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
ysim <- sort(rLnormParMix(100,.9,0,1,5,1))
mixFit <- LPfitEM(ysim,1e-10,1000,nboot=2)
mixFit
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
source("~/.active-rstudio-document")
mixFit
source("~/.active-rstudio-document")
mixFit
?cov
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
source("~/.active-rstudio-document")
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
source("~/.active-rstudio-document")
mixFit
mixFit <- LPfitEM(ysim,1e-10,1000,nboot=0)
mixFit$pars
mixFit$loglik
mixFit$thRank
mixFit$niter
source("~/.active-rstudio-document")
mixFit$niter
source("~/.active-rstudio-document")
mixFit$niter
mixFit$postProb
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
source("~/.active-rstudio-document")
mixFit$bootEst
mixFit$bootStd
sd(c(1,2,3,NA))
sd(c(1,2,3,NA),na.rm=TRUE)
?apply(array, margin, ...)
?apply
MAT = cbind((c(1,2,3,NA),c(2,12,4,32))
MAT = cbind(c(1,2,3,NA),c(2,12,4,32))
MAT
apply(MAT,2,sd,na.rm=TRUE)
apply(MAT,2,sd)
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
source("~/.active-rstudio-document")
mixFit$bootStd
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
source("~/.active-rstudio-document")
library(devtools)
library(roxygen2)
setwd("C:\\Users\\marco.bee\\OneDrive\\LognPareto")
setwd("./LNPar") # LNPar must be an existing directory
document()
setwd('..')
install('LNPar')
library('LNPar')
source("~/.active-rstudio-document")
?ECMEBoot
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(LNPar)
library(CASdatasets)
# BL <- 10 # 20
# dati <- as.matrix(read.csv(paste("g:\\il mio drive\\oldstuff\\paperi\\indinfgh\\operational losses unicredit\\data",BL,".csv",sep="")),header=FALSE) # 60 ok, 50 no, 10 no
# datitutti <- as.double(dati[,1])
# y <- datitutti/1000 # all years, one business line
data("auscathist")
y <- auscathist$NormCost2014
NMA = y[is.na(y)==FALSE]
y = NMA[NMA>0]
n <- length(y)
hist(y)
eps = 1e-12
maxiter = 1000
takeOut = 5
nboot = 1000
est0 <- c(mean(log(y)),sd(log(y)))
resultsEM <- LPfitEM(y,eps,maxiter,nboot=100)
estParsEM <- resultsEM$pars
estParsEM
parsstd <- resultsEM$bootStd
parsstd
resultsEM$bootEst
sd(resultsEM$bootEst[,5])
sd(resultsEM$bootEst[,5],na.rm = T)
